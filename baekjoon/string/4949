#include <iostream>

using namespace std;

int main() {
    string s;
    
    while(getline(cin,s)) {
        if(s == ".") continue; // 점 하나만 나온 경우 출력 안해줌
        
        int l = s.length();
        int k = 0; // 문자열에서 괄호가 나온 횟수 
        int a[l+1] = {0,}; // a배열에 괄호에 해당하는 수를 넣어준다 ( = 1, ) = -1, [ = 2, ] = -2
        
        for(int i=0;i<l;i++) {
            if(s[i] == '(') {
                a[k] = 1;
                k++;
            }
            else if(s[i] == ')') {
                a[k] = -1;
                k++;
            }
            else if(s[i] == '[') {
                a[k] = 2;
                k++;
            }
            else if(s[i] == ']') {
                a[k] = -2;
                k++;
            }
 
        }
        
        bool re = true; // 음수가 나왔을 때 앞에 수가 절대값이 맞지 않는 양수일 경우 반복문을 나오고 false(no)를 반환  
        int q = 0; // b배열에 들어가는 수가 양수일 경우 q값에 넣어줌
        int b[k+1] = {0,}; // 양수만 들어올수있다. 음수를 만났을 경우 절대값이 같으면 0으로 바꿔주고
        
        for(int i=0;i<k;i++) {
            
            if(a[i] > 0) {
                b[q] = a[i]; // 양수인 값을 b의 처음에 넣어주고 q증가
                q++; // 다음수를 미리 가리키고 있는중
            }
            
            else if(a[i] == -1) { // 음수를 만났을때
                if(b[q-1] != 1 || q == 0) { // b에 들어간 마지막 값이 절대값이 같지 않거나 처음에 음수가 나온경우 
                    re = false; 
                    break;
                }
                b[q-1] = 0;  // 그게 아니라면 1을 0으로 바꿔주고 
                b[q--];  // 증가된 q를 1이 있었던 자리를 가리키게 함(0을 가리키는중 다시 양수를 만나면 지금 0이)
            }                                                                     // 양수로 다시 바뀜
            else if(a[i] == -2) {
                if(b[q-1] != 2 || q == 0) {
                    re = false;
                    break;
                }
                b[q-1] = 0;
                b[q--];
            }
        } // 정상적으로 반복을 했으면 b배열에는 처음부터 끝까지 0이어야함 + re값은 true로 유지
        
        int sum = 0;
        
        for(int i=0;i<k;i++) {
            sum += b[i]; // b배열을 모두 더한다
            //cout << b[i] << ' ';
        }
        //cout << endl;
        
        if(re == false || sum != 0) cout << "no" << '\n'; // 닫히는 괄호 앞에 알맞지 않은 괄호가 나왔거나,열리는 괄호만 계속 나온경우 틀림!
        else cout << "yes" << '\n'; // 나머지는 다맞음
        
    }
}

백준 풀면서 가장 열심히 푼듯 3일 내내 풀었다.
