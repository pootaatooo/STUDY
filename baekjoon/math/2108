#include <iostream>
#include <cmath>
#include <algorithm>
#include <vector>

using namespace std;

int main() {
    int n;
    cin >> n;
    int num[n];
    
    for(int i=0;i<n;i++) {  // 배열 초기화
        cin >> num[i];
    }
    
    //산술평균 출력
    double sum = 0;
    for(int i=0;i<n;i++) {
        sum += num[i];
    }
    
    if(round(sum/n) == -0) cout << 0 << '\n';
    else
        cout << round(sum / n) << '\n';
    
    // 중앙값 출력 (어차피 정렬 안 풀어줘도 될듯)
    sort(num,num+n);
    cout << num[n/2] << '\n';
    
    //최빈값 출력
    int cnt[8001] = {0,};
    
    for(int i=0;i<n;i++) {
        if(num[i] >= 0) // 0이거나 양수인 경우 그대로 cnt++(누적합) 
            cnt[num[i]]++; 
        else // 음수인경우 4001(-1)부터 8000(-4000)까지
            cnt[(-num[i])+4000]++;
    }
    
    int maxCnt = *max_element(cnt, cnt + 8001); // 최빈값이 몇번 나왔는지
    vector<int> v;
    int qq = 0;
    
    for(int i = 0; i <= 8000; i++) {
        if(cnt[i] == maxCnt) { // 최빈값과 동일한 빈도를 갖는 요소들의 수를 v에 추가
            v.push_back(i);
            qq++;
        }
    }

    sort(v.begin(), v.end()); // 오름차순으로 정렬
    
    int mode;
    
    if(maxCnt != 1) {
        if(qq > 2) {
            if(v[1] > 4000) {
                mode = -(v[1] - 4000);
            } else {
                mode = v[1];
            }
        }
        else {
            if(v[0] > 4000) {
                mode = -(v[0] - 4000);
            } else {
                mode = v[0];
            }
        }
        cout << mode << '\n';
    }

    // 범위 출력
    int re = 0;
    re = num[n-1] - num[0];
    cout << re << '\n';
    
    
    
}
