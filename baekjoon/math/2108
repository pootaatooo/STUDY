#include <iostream>
#include <cmath>
#include <algorithm>
#include <vector>

using namespace std;

int main() {
    int n;
    cin >> n;
    int num[n];
    
    for(int i=0;i<n;i++) {  // 배열 초기화
        cin >> num[i];
    }
    
    //산술평균 출력
    double sum = 0;
    for(int i=0;i<n;i++) {
        sum += num[i];
    }
    
    if(round(sum/n) == -0) cout << 0 << '\n';
    else
        //cout << round(sum / n) << '\n';
    
    // 중앙값 출력 (어차피 정렬 안 풀어줘도 될듯)
    sort(num,num+n);
    //cout << num[n/2] << '\n';
    
    //최빈값 출력(계수정렬)
    int cnt[8001] = {0,};
    
    for(int i=0;i<n;i++) {
        if(num[i] >= 0) // 0이거나 양수인 경우 그대로 cnt++(누적합) 
            cnt[num[i]]++; 
        else // 음수인경우 4001(-1)부터 8000(-4000)까지
            cnt[(-num[i])+4000]++;
    }
    
    // for(int i=0;i<=8000;i++) {
    //     if(cnt[i] == 0) continue;
    //     cout << cnt[i] << ' ' << i << endl;
    // }
    int k = 0; // 카운트한 배열의 사이즈
    vector<pair<int,int>> v;
    
    for(int i=0;i<=8000;i++) {
        if(cnt[i] == 0) continue;
        k++;
        v.push_back(make_pair(cnt[i],i));
    }
    
    sort(v.begin(),v.end());
    
    int result = v[k-1].second;
    int count = 0;
    
    for(int i=0;i<k;i++) {
        if(v[i].first == v[i+1].first) {
            count++;
        }
        else {
            if(count > 0) {

            }
        }
        
        
    }
    
    if(result > 4000) {
        result -= 4000;
        result *= -1;
        cout << result << '\n';
    }
    else
        cout << result << '\n';


    // 범위 출력
    //int re = 0;
    //re = num[n-1] - num[0];
    //cout << re << '\n';
    
    
    
}
