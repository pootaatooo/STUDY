#include <iostream>
#include <vector>

using namespace std;

int main() {
    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    int n, net;
    cin >> n >> net;
    vector<vector<int>>v(n,vector<int>(101,0)); // vector안에 vector를 넣어서 2차원 배열을 만들어줌
    pair<int,int>p;
    
    for(int i=0;i<n;i++) {
        cin >> p.first >> p.second;
        v[i][p.first] = v[i][p.second] = 1;
    }
    
    for(int i=0;i<net;i++) { // networking 되어있는 컴퓨터 쌍의 수를 1차원 배열(열)
        for(int j=0;j<n;j++) { // 컴퓨터의 개수를 2차원 배열에 넣어줌(행)
            cout << v[i][j] << ' ';
        }
        cout << endl;
    }
    
    
}

#include <iostream>
#include <queue>
#include <vector>

using namespace std;

void printGraph(const vector<vector<int>>& graph) {
    for(int i=1;i<graph.size();i++) {
        cout << i << ' ';
        for(int j=0;j<graph[i].size();j++) {
            cout << graph[i][j] << ' ';
        }
        cout << endl;
    }
}

int main() {
    ios::sync_with_stdio(0); cin.tie(0);
    int n,m;
    cin >> n >> m;  // 컴퓨터의 수 n, 연결 정보의 수 m
    vector<vector<int>> graph(n+1);
    vector<bool> visited(n+1,false);
    int cnt = 0;
    
    for(int i=0;i<m;i++) {
        int a, b;
        cin >> a >> b;
        graph[a].push_back(b);
        graph[b].push_back(a);
    }
    
    printGraph(graph);
    
    
    
    
}
