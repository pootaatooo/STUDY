#include <iostream>
#include <queue>

using namespace std;

int n, m, v;
int map[1001][1001] = {0,};
bool dfs_visit[1001];
bool bfs_visit[1001];
queue<int> q;


void dfs(int v) {
    dfs_visit[v] = true;
    cout << v << ' ';
    
    for(int i=1;i<=n;i++) {
        if(!dfs_visit[i] && map[v][i] == 1) {
            dfs(i);
        }
    }
}

void bfs(int v) {
    q.push(v);
    bfs_visit[v] = true;
    cout << v << ' ';
    
    while(!q.empty()) {
        v = q.front();
        q.pop();
        
        for(int i=1;i<=n;i++) {
            if(!bfs_visit[i] && map[v][i] == 1) {
                bfs_visit[i] = true;
                q.push(i);
                cout << i << ' ';
            }   
        }
    }
}


int main() {
    
    cin >> n >> m >> v;
    
    for(int i=0;i<m;i++) {
        int a, b;
        cin >> a >> b;
        map[a][b] = 1;
        map[b][a] = 1;
    }

    dfs(v);
    cout << '\n';
    bfs(v);
    
}
